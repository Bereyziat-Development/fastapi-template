services:
  proxy:
    image: traefik:3.2
    container_name: traefik
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /path/to/traefik.yml:/etc/traefik/traefik.yml
      - /path/to/acme.json:/acme.json
    command:
      - --log.level=INFO
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.email=${EMAIL?Variable not set}
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    deploy:
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - traefik.constraint-label=${TRAEFIK_PUBLIC_TAG?Variable not set}
      - traefik.http.middlewares.${STACK_NAME?Variable not set}-https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.${STACK_NAME?Variable not set}-https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-http.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-http.entrypoints=web
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-http.middlewares=${STACK_NAME?Variable not set}-www-redirect,${STACK_NAME?Variable not set}-https-redirect
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-https.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-https.entrypoints=websecure
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-proxy-https.tls.certresolver=le

  db:
    image: postgres:17
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME?Variable not set}.app-db-data == true

  backend:
    image: ${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}
    build:
      context: .
      dockerfile: backend.dockerfile
      args:
        ENV_CONFIG: ${ENV_CONFIG-dev}
    env_file:
      - .env
    volumes:
      - app-file-storage:/app/files
    environment:
      - ENV_CONFIG=${ENV_CONFIG-dev}
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}
    networks:
      - default
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
    labels:
      - traefik.enable=true
      - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=web
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - traefik.http.routers.pgadmin-http.rule=Host(`pgadmin.${DOMAIN?Variable not set}`)
      - traefik.http.routers.pgadmin-http.entrypoints=web
      - traefik.http.routers.pgadmin-http.middlewares=${STACK_NAME?Variable not set}-https-redirect
      - traefik.http.routers.pgadmin-https.rule=Host(`pgadmin.${DOMAIN?Variable not set}`)
      - traefik.http.routers.pgadmin-https.entrypoints=websecure
      - traefik.http.routers.pgadmin-https.tls=true
      - traefik.http.routers.pgadmin-https.tls.certresolver=le

volumes:
  app-db-data:
  app-file-storage:

networks:
  traefik-public:
    external: ${TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL-true}